# by William Blum
# Version of 05/12/2007

OMakeVersion(0.9.8.5, 0.9.8.5)

open build/Common
open configure/Configure

# Check that the program 'prog' is in the path. If not
# assumet that it is in the path given by the environement variable 'envar' in the subdirectory
# 'subdir', taking 'default' as a default value if 'envar' is not defined.
#
# The function returns the directory where the executable file lies or just the empty string
# if it is already in the environment PATH
public.CheckProgDirEnvVar(prog,envvar,default,subdir) =
    if $(CheckProg $(prog))
        ret=
        export
    else
        @echo "We will assume that $(prog) lies in the directory given by the $(envvar) environment variable."
        ret=$(getenv $(envvar), $(default))\\$(subdir)
        export
    return $(ret)
    
# Check that the program 'prog' is in the path. If not
# assumet that it is in the path given by the environement variable 'envar' in the subdirectory
# 'subdir', taking 'default' as a default value if 'envar' is not defined.
#
# The function returns the path to the program executable file (inlcuding the filename part)
# to be used for later execution.
public.CheckProgEnvVar(prog,envvar,default,subdir) =
    if $(CheckProg $(prog))
        ret=$(prog)
        export
    else
        @echo "We will assume that $(prog) lies in the directory given by the $(envvar) environment variable."
        ret="$(getenv $(envvar), $(default))\\$(subdir)\\$(prog)$(EXE)"
        export
    return  $(ret)
    
.STATIC:
    CSC = $(CheckProgEnvVar csc,FXTOOLS,C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727,$(EMPTY))
    RESGEN = $(CheckProgEnvVar ResGen,SDKTOOLS,C:\Program Files\Microsoft SDKs\Windows\v6.0A,bin)
    MONOCS_EXISTS = $(CheckProg mcs)
    export

################################################
# Configuration.  

# To build using the Mono toolchain:
#  WITHMONO=


# Due to bug in the Mono implementation, assemblies created using the Microsoft toolchain (Framework SDK) are not 100% compatible with the Mono run-time. In particular .resx resources are not correctly handled by Mono. 
# In order to build an assembly that is compatible with Mono, add the following command line switch to omake:
#  FORMONO=


# For a debug build:
#  DEBUG=


if $(defined WITHMONO)
    if $(MONOCS_EXISTS)
        @echo "Build using Mono toolchain"
        RESGEN=resgen
        CSC=mcs
        export
    else
        @echo "You requested to use the Mono toolchain, however it has not been detected during OMake configuration. Make sure that your path environement variable contains the path to mcs.exe and reconfigure the project with 'omake -U'"
        exit(1)
    export
else
    @echo "Build using Microsoft Framework Sdk toolchain"


if $(defined FORMONO)
    @echo "CLR compatibility: Mono"
else
    @echo "CLR compatibility: .Net"


if $(defined DEBUG)
    @echo "Debug build"
else
    @echo "Release build"

if $(defined DEBUG)
    public.OUTPUTDIR=$(dir $(ROOT)/bin/Debug$(if $(defined MONO), Mono) )
    export
else
    public.OUTPUTDIR=$(dir $(ROOT)/bin/Release$(if $(defined MONO), Mono ))
    export

@mkdir -p $(OUTPUTDIR)
    
#    
#####################################