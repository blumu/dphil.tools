== Changelog
0.0.10
	+ Bug fixed in the type unification/annotation algorithm causing a malformed eta-long normal form.
0.0.9
	+ Bug fixed: the traversal was not computed correctly: when playing for P, it was wrongly assumed that the justifier of the variable node is the p^th last move in the P-view where p is the span of the variable node. However this is only true for cycle-free computation graph (i.e. computation tree).
	The justifier binder is now found by looking for the last occurrence of the variable's enabler in the P-view.
	+ GUI: each traversal has now an individual horizontal scroll-bar that shows only when it is selected.
0.0.8
    + Bug fixed: the previous version introduced a bug in the CPDA generation (the internal information on the computation graph nodes were not generated properly)
0.0.7
    + Update: change from GLEE to MSAGL (Thanks to Lev Nachmanson from Microsoft for sending me the academic version of the tool.)
0.0.6   
    + New features: edition of justification sequences editiong 
    + New features: the user can play against the computer in order to build a traversal over a computation graph
0.0.2
    + New feature that lets you load a simply-typed lambda term-in-context and construct its compuation tree. A type inference algorithm is implemented to avoid to have to declare the type of the variable in the lambda abstractions.
    + Exportation of the computation tree/graph to Latex using the PSTricks package
    + Build system based on OMake
    
0.0.1
    + initial version for Higher-order grammars and Pushdown automaton